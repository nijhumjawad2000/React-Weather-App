{"version":3,"sources":["App.js","App1.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchData","url","buildUrlApi","axios","get","then","response","setState","data","currentData","dayAndWeek","currentDayFull","Date","dt_txt","getDay","nowTemp","Math","round","main","temp","nowMinTemp","temp_min","nowMaxTemp","temp_max","nowHumidity","humidity","nowPressure","pressure","nowWind","wind","speed","nowWeather","weather","description","nowIcon","icon","days","daysFull","temps","minTemps","maxTemps","icons","i","state","list","length","dayFull","push","concat","toConsumableArray","slice","encodeURIComponent","location","join","find","e","changeLocation","preventDefault","inputLocation","locationInput","value","setIndex","index","displayIndex","_this2","_this$state","react_default","a","createElement","className","onSubmit","defaultValue","type","ref","input","width","height","src","alt","map","item","key","onClick","Component","App1","newData","dt","dist_default","unix","format","Index","src_App_0","Hourly","src_App1","ReactDOM","render","BrowserRouter","Link","to","Route","path","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.6f8ace45.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport './App.css';\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      location: \"Miami\",\n      days: [],\n      daysFull: [],\n      temps: [],\n      minTemps: [],\n      maxTemps: [],\n      humidity: [],\n      pressure: [],\n      wind: [],\n      weather: [],\n      icons: [],\n      displayIndex: 0\n    };\n  }\n\n  fetchData = () => {\n    const url = this.buildUrlApi();\n    axios.get(url).then(response => {\n      this.setState({\n        data: response.data\n      });\n\n      const currentData = this.currentData();\n      const dayAndWeek = [\n        \"Sunday\",\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\"\n      ];\n      const currentDay = \"Now\";\n      const currentDayFull =\n        dayAndWeek[new Date(currentData.dt_txt).getDay()];\n      const nowTemp = Math.round(currentData.main.temp);\n      const nowMinTemp = Math.round(currentData.main.temp_min);\n      const nowMaxTemp = Math.round(currentData.main.temp_max);\n      const nowHumidity = Math.round(currentData.main.humidity);\n      const nowPressure = Math.round(currentData.main.pressure);\n      const nowWind = Math.round(currentData.wind.speed);\n      const nowWeather = currentData.weather[0].description;\n      const nowIcon = currentData.weather[0].icon;\n\n      const days = [];\n      const daysFull = [];\n      const temps = [];\n      const minTemps = [];\n      const maxTemps = [];\n      const humidity = [];\n      const pressure = [];\n      const wind = [];\n      const weather = [];\n      const icons = [];\n      for (let i = 0; i < this.state.data.list.length; i = i+1) {\n        let date = new Date(this.state.data.list[i].dt_txt);\n        let dayFull = dayAndWeek[date.getDay()];\n        days.push(this.state.data.list[i].dt_txt);\n        daysFull.push(dayFull);\n        temps.push(Math.round(this.state.data.list[i].main.temp));\n        minTemps.push(Math.round(this.state.data.list[i].main.temp_min));\n        maxTemps.push(Math.round(this.state.data.list[i].main.temp_max));\n        humidity.push(Math.round(this.state.data.list[i].main.humidity));\n        pressure.push(Math.round(this.state.data.list[i].main.pressure));\n        wind.push(Math.round(this.state.data.list[i].wind.speed));\n        weather.push(this.state.data.list[i].weather[0].description);\n        icons.push(this.state.data.list[i].weather[0].icon)\n      }\n\n      this.setState({\n        days: [currentDay, ...days.slice(1)],\n        daysFull: [currentDayFull, ...daysFull.slice(1)],\n        temps: [nowTemp, ...temps.slice(1)],\n        minTemps: [nowMinTemp, ...minTemps.slice(1)],\n        maxTemps: [nowMaxTemp, ...maxTemps.slice(1)],\n        humidity: [nowHumidity, ...humidity.slice(1)],\n        pressure: [nowPressure, ...pressure.slice(1)],\n        wind: [nowWind, ...wind.slice(1)],\n        weather: [nowWeather, ...weather.slice(1)],\n        icons: [nowIcon, ...icons.slice(1)]\n      });\n    });\n  };\n\n  buildUrlApi = () => {\n    const location = encodeURIComponent(this.state.location);\n    const urlPrefix = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\n    const urlSuffix = \"&APPID=b97bb751313b5a72afe4f1be164184c5&units=metric\";\n    return [urlPrefix, location, urlSuffix].join(\"\");\n  };\n\n  currentData = () => {\n    const list = this.state.data.list;\n    return list.find(e => new Date(e.dt_txt));\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  changeLocation = e => {\n    e.preventDefault();\n    const inputLocation = this.locationInput.value;\n    this.setState(\n      {\n        location: inputLocation\n      },\n      () => {\n        this.fetchData();\n      }\n    );\n  };\n\n  setIndex = index => {\n    this.setState({\n      displayIndex: index\n    });\n  };\n\n  render() {\n    const {\n      location,\n      days,\n      daysFull,\n      temps,\n      maxTemps,\n      minTemps,\n      humidity,\n      pressure,\n      wind,\n      weather,\n      icons,\n      displayIndex\n    } = this.state;\n\n    return (\n      <div className=\"main-div\">\n        <form onSubmit={this.changeLocation}>\n          <div className=\"input1\">\n            <input\n              className=\"input2\"\n              defaultValue={location}\n              type=\"text\"\n              ref={input => (this.locationInput = input)}\n            />\n          </div>\n        </form>\n\n        <div>\n\n          <div>\n            <div className=\"day\">{daysFull[displayIndex]}</div>\n           \n            <div>\n              <div><img width=\"150\" height=\"150\" src={'http://openweathermap.org/img/w/' + `${icons[displayIndex]}` + '.png'} alt=\"weater-icon\" /></div>\n              {temps[displayIndex]}°C\n              </div>\n            <div><strong>Description : </strong>{weather[displayIndex]}</div>\n            <div><strong>Humidity : </strong>{humidity[displayIndex]}%</div>\n            <div><strong>Pressure : </strong>{pressure[displayIndex]} hPa</div>\n            <div><strong>Wind-Speed : </strong>{wind[displayIndex]} m/s</div>\n            <div><strong> Max.Temp. : </strong>{maxTemps[displayIndex]}°C</div>\n            <div><strong>Min.Temp. : </strong>{minTemps[displayIndex]}°C</div>\n          </div>\n        </div>\n        <div>\n            <div className=\"selection-row\">\n              {days.map((item, index) => {\n                if (displayIndex === index) {\n                  return (\n                    <button\n                      className=\"selected\"\n                      key={index + 1}\n                      onClick={() => this.setIndex(index)}\n                    >\n                      {item}\n                    </button>\n                  );\n                } else {\n                  return (\n                    <button\n                      key={index + 1}\n                      onClick={() => this.setIndex(index)}\n                    >\n                      {item}\n                    </button>\n                  );\n                }\n              })}\n            </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport Moment from \"react-moment\";\nimport './App.css';\n\nclass App1 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      location: \"Miami\",\n      days: [],\n      daysFull: [],\n      temps: [],\n      minTemps: [],\n      maxTemps: [],\n      humidity: [],\n      pressure: [],\n      wind: [],\n      weather: [],\n      icons: [],\n      newData:[]\n    };\n  }\n\n  fetchData = () => {\n    const url = this.buildUrlApi();\n\n    axios.get(url).then(response => {\n      this.setState({\n        data: response.data\n      });\n\n    \n      const newData =[];\n\n      for (let i = 0; i < this.state.data.list.length; i = i + 8) {\n        newData.push({\n          days:this.state.data.list[i].dt,\n          temps:Math.round(this.state.data.list[i].main.temp),\n          minTemps:Math.round(this.state.data.list[i].main.temp_min),\n          maxTemps:Math.round(this.state.data.list[i].main.temp_max),\n          humidity:this.state.data.list[i].main.humidity,\n          pressure:this.state.data.list[i].main.pressure,\n          wind:this.state.data.list[i].wind.speed,\n          weather:this.state.data.list[i].weather[0].description,\n          icons:this.state.data.list[i].weather[0].icon\n        })\n\n\n      }\n\n      this.setState({\n       newData ,\n      });\n    });\n  };\n\n  buildUrlApi = () => {\n    const location = encodeURIComponent(this.state.location);\n    const urlPrefix = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\n    const urlSuffix = \"&APPID=b97bb751313b5a72afe4f1be164184c5&units=metric\";\n    return [urlPrefix, location, urlSuffix].join(\"\");\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  changeLocation = e => {\n    e.preventDefault();\n    const inputLocation = this.locationInput.value;\n    this.setState(\n      {\n        location: inputLocation\n      },\n      () => {\n        this.fetchData();\n      }\n    );\n  };\n\n  setIndex = index => {\n    this.setState({\n      displayIndex: index\n    });\n  };\n\n  render() {\n    const {\n      location,\n     newData\n    } = this.state;\n\n    return (\n      <div className=\"main-div\">\n      <form onSubmit={this.changeLocation}>\n      <div className=\"input1\">\n        <input\n          className=\"input2\"\n          defaultValue={location}\n          type=\"text\"\n          ref={input => (this.locationInput = input)}\n        />\n      </div>\n    </form>\n\n    <div className=\"weather-des\">\n        {newData.map(item => {\n          return(\n          <div key={item.days}>\n          <div className=\"container\">\n          <Moment unix format=\"ddd\">{item.days}</Moment> \n        \n         <p>{item.temps}°c</p>\n         <p><img width=\"150\" height=\"150\" src={`http://openweathermap.org/img/w/${item.icons}.png`} /></p>\n         <p>MIN={item.minTemps}°c</p>\n         <p>MAX={item.maxTemps}°c</p>\n        \n          </div>\n          </div>)\n        })}\n    </div>\n  </div>\n   );\n  }\n}\nexport default App1;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport App1 from './App1';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nfunction Index() {\n    return (\n      <div className=\"hourlytitle\">\n        <App />\n      </div>\n    );\n   }\n   \n   function Hourly() {\n    return (\n      <div className=\"hourlytitle\">\n        <h2>\n          <App1 />\n        </h2>\n      </div>\n    );\n   }\n  \n   function AppRouter() {\n    return (\n      <Router>\n        <div>\n          <nav>\n            <ul>\n              <li>\n                <Link className=\"list\" to=\"/\">Hourly Forecast</Link>\n              </li>\n              <li>\n                <Link className=\"list\" to=\"/Daily/\">Daily Forecast</Link>\n              </li>\n            </ul>\n          </nav>\n   \n          <Route path=\"/\" exact component={Index} />\n          <Route path=\"/Daily/\" component={Hourly} />\n        </div>\n      </Router>\n    );\n   }\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n"],"sourceRoot":""}